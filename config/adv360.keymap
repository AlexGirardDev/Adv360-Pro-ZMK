
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp GRAVE     &kp N1     &kp N2      &kp N3  &kp N4  &kp N5               &kp F5                                                                       &none  &kp N6     &kp N7  &kp N8    &kp N9     &kp N0      &none
   &kp TAB    &kp SQT  &kp COMMA  &kp PERIOD   &kp P   &kp Y            &kp EQUAL                                                                   &kp PG_UP   &kp F      &kp G   &kp C     &kp R      &kp L   &kp HOME
   &kp ESC      &kp A      &kp O       &kp E   &kp U   &kp I              &kp F12  &kp LGUI  &kp LALT                  &kp LGUI  &kp LC(LA(SPACE))  &kp PG_DN   &kp D      &kp H   &kp T     &kp N      &kp S    &kp END
 &kp LSHFT  &kp SLASH      &kp Q       &kp J   &kp K   &kp X                                  &kp DEL                     &none                                 &kp B      &kp M   &kp W     &kp V      &kp Z  &kp ENTER
 &kp LCTRL     &kp UP   &kp DOWN    &kp LBKT  &kp N9                    &kp SPACE  &kp BSPC     &mo 1                     &mo 3              &mo 2      &mo 1          &kp LC(B)   &none  &kp LEFT  &kp RIGHT  &kp K_APP
            >;
        };

        layer_red {
            bindings = <
  &kp LA(F4)    &kp LC(LA(N1))        &kp LC(LA(N2))    &kp LC(LA(N3))        &kp LC(LA(N4))  &kp LC(LA(N5))            &trans                                                                    &trans  &kp LC(LA(N6))  &kp LC(LA(N7))  &kp LC(LA(N8))  &kp LC(LA(N9))  &kp LC(LA(N0))  &kp LC(LA(MINUS))
 &kp LA(ESC)     &kp LA(GRAVE)             &kp LC(X)         &kp LC(C)             &kp LC(V)       &kp PSCRN             &none                                                                    &trans          &trans          &kp N7          &kp N8          &kp N9          &trans             &trans
      &trans     &kp LC(LA(H))         &kp LC(LA(J))     &kp LC(LA(K))         &kp LC(LA(L))          &trans             &none  &bt BT_SEL 0  &bt BT_SEL 1                  &bt BT_SEL 3  &trans  &trans          &trans          &kp N4          &kp N5          &kp N6          &trans             &trans
      &trans         &kp LC(Z)             &kp LC(Y)         &kp LC(A)         &kp LC(LA(C))   &kp LC(LA(P))                                  &bt BT_SEL 2                         &none                          &trans          &kp N1          &kp N2          &kp N3       &kp EQUAL             &trans
      &trans  &kp LC(LA(LBKT))  &kp LS(LC(LA(LBKT)))  &kp LC(LA(RBKT))  &kp LS(LC(LA(RBKT)))                            &trans        &trans        &trans                        &trans  &trans  &trans                          &trans          &kp N0          &kp N0          &trans             &trans
            >;
        };

        layer_Symbols {
            bindings = <
 &trans     &trans     &trans  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)              &kp C_MUTE                                                                           &kp C_PLAY_PAUSE     &trans    &trans    &trans     &trans     &trans  &kp KP_NUMLOCK
 &trans   &kp EXCL     &kp AT    &kp HASH    &kp DLLR   &kp PRCNT            &kp C_VOL_UP                                                                                 &kp C_PREV  &kp CARET  &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR          &trans
 &trans   &kp LBKT   &kp SEMI    &kp LBRC    &kp LPAR   &kp GRAVE            &kp C_VOL_DN  &bt BT_CLR  &kp LC(LA(PAUSE_BREAK))                  &bl BL_TOG  &trans        &kp C_NEXT  &kp TILDE  &kp RPAR  &kp RBRC  &kp COLON   &kp RBKT          &trans
 &trans  &kp QMARK  &kp MINUS    &kp BSLH   &kp EQUAL      &kp LT                                                       &trans                      &trans                               &kp GT  &kp PLUS  &kp PIPE  &kp UNDER  &kp SLASH          &trans
 &trans     &trans     &trans      &trans      &trans                               &mo 3      &trans                   &trans                      &trans  &trans            &trans               &trans    &trans     &trans     &trans          &trans
            >;
        };

        layer_Fn {
            bindings = <
  &none   &none     &none     &none      &none   &none            &bootloader                                                  &kp LC(LA(LS(F6)))   &none  &kp F10  &kp F11  &kp F12   &none   &none
 &trans   &none     &none     &none      &none   &none                  &none                                                  &kp LC(LA(LS(F5)))   &none   &kp F7   &kp F8   &kp F9   &none   &none
 &trans  &kp UP  &kp DOWN  &kp LEFT  &kp RIGHT   &none                  &none   &to 4  &trans                  &trans  &trans  &kp LC(LA(LS(F4)))   &none   &kp F4   &kp F5   &kp F6   &none   &none
 &trans   &none     &none     &none      &none   &none                                  &none                   &none                               &none   &kp F1   &kp F2   &kp F3   &none   &none
 &trans   &none     &none     &none      &none                         &trans  &trans   &none                   &none   &none               &none            &none    &none    &none   &none   &none
            >;
        };

        layer_QWERTY {
            bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans     &trans   &trans    &trans     &trans
   &kp TAB   &kp Q   &kp W   &kp E   &kp R   &kp T            &trans                                                  &trans   &kp Y   &kp U      &kp I    &kp O     &kp P   &kp BSLH
   &kp ESC   &kp A   &kp S   &kp D   &kp F   &kp G             &to 0  &trans  &trans                  &trans  &trans  &trans   &kp H   &kp J      &kp K    &kp L  &kp SEMI    &kp SQT
 &kp LSHFT   &kp Z   &kp X   &kp C   &kp V   &kp B                             &none                  &trans                   &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
    &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans     &trans   &trans    &trans     &trans
            >;
        };

    };
};
