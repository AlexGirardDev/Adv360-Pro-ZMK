/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "turbos.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &kp N1     &kp N2     &kp N3      &kp N4  &kp N5  &kp F12                                                                &kp F9    &kp N6  &kp N7         &kp N8  &kp N9    &kp N0     &to 1
&kp TAB    &kp SQT    &kp COMMA  &kp PERIOD  &kp P   &kp Y   &kp F6                                                                 &kp F10   &kp F   &kp G          &kp C   &kp R     &kp L      &kp BACKSLASH
&kp ESC    &kp A      &kp O      &kp E       &kp U   &kp I   &kp F5     &to 1     &kp LALT      &kp LGUI         &kp LC(LA(SPACE))  &kp F11   &kp D   &kp H          &kp T   &kp N     &kp S      &kp SEMICOLON
&kp LSHFT  &kp SLASH  &kp Q      &kp J       &kp K   &kp X                        &kp DEL       &kp PRINTSCREEN                               &kp B   &kp M          &kp W   &kp V     &kp Z      &kp ENTER
&kp LCTRL  &kp UP     &kp DOWN   &kp LBKT    &kp N9          &kp SPACE  &kp BSPC  &kp LGUI      &mo 5            &mo 4              &kp LWIN          &macro_switch  &none   &kp LEFT  &kp RIGHT  &kp K_APP
            >;
        };

        layer_WOW {
            bindings = <
&trans  &N1_turbo            &N2_turbo     &trans    &N4_turbo  &N5_turbo  &f12_turbo                                           &trans  &trans  &trans  &trans  &trans  &trans  &to 0
&trans  &single_quote_turbo  &comma_turbo  &trans    &p_turbo   &y_turbo   &f6_turbo                                            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &a_turbo             &trans        &trans    &trans     &i_turbo   &f5_turbo   &to 0        &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &slash_turbo         &q_turbo      &j_turbo  &k_turbo   &x_turbo                            &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans               &trans        &trans    &trans                &trans      &bspc_turbo  &trans      &mo 0   &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_QWERTY {
            bindings = <
&trans     &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans     &trans   &trans    &trans
&kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T   &trans                                      &trans  &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSLH
&kp ESC    &kp A   &kp S   &kp D   &kp F   &kp G   &to 0   &trans  &trans      &trans  &trans  &trans  &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V   &kp B                   &none       &trans                  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
&trans     &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans     &trans   &trans    &trans
            >;
        };

        layer_red {
            bindings = <
&kp LA(F4)   &kp LC(LA(N1))    &kp LC(LA(N2))        &kp LC(LA(N3))    &kp LC(LA(N4))        &kp LC(LA(N5))  &kp LC(LA(F))                                                        &kp LC(LA(B))  &kp LC(LA(N6))   &kp LC(LA(N7))  &kp LC(LA(N8))  &kp LC(LA(N9))  &kp LC(LA(N0))  &kp LC(LA(MINUS))
&kp LA(ESC)  &kp LA(GRAVE)     &kp LC(X)             &kp LC(C)         &kp LC(V)             &kp PSCRN       &kp LC(LA(S))                                                        &kp LC(LA(W))  &kp LC(LS(TAB))  &kp N7          &kp N8          &kp N9          &trans          &trans
&trans       &kp LC(LA(H))     &kp LC(LA(J))         &kp LC(LA(K))     &kp LC(LA(L))         &kp LC(LA(O))   &kp LC(LA(G))  &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 3  &trans  &kp LC(LA(R))  &kp LC(TAB)      &kp N4          &kp N5          &kp N6          &trans          &trans
&trans       &kp LC(Z)         &kp LC(Y)             &kp LC(A)         &kp LC(LA(C))         &kp LC(LA(T))                                &bt BT_SEL 2      &none                                &kp LC(W)        &kp N1          &kp N2          &kp N3          &kp EQUAL       &trans
&trans       &kp LC(LA(LBKT))  &kp LS(LC(LA(LBKT)))  &kp LC(LA(RBKT))  &kp LS(LC(LA(RBKT)))                  &trans         &trans        &trans            &trans        &trans  &trans                          &kp RCTRL       &kp N0          &kp N0          &trans          &trans
            >;
        };

        layer_Symbols {
            bindings = <
&trans  &trans                &trans                &kp LG(N3)          &kp LG(N4)             &kp LG(N5)  &kp C_MUTE                                                         &kp C_PLAY_PAUSE  &trans     &trans          &trans    &trans     &trans     &kp KP_NUMLOCK
&trans  &kp PRINTSCREEN       &kp AT                &kp HASH            &kp DLLR               &kp PRCNT   &kp C_VOL_UP                                                       &kp C_PREV        &kp CARET  &kp AMPS        &kp STAR  &kp LPAR   &kp RPAR   &trans
&trans  &kp MINUS             &kp EQUAL             &kp LEFT_BRACKET    &kp RIGHT_BRACKET      &kp GRAVE   &kp C_VOL_DN  &trans  &kp LC(LA(PAUSE_BREAK))      &trans  &trans  &kp C_NEXT        &kp TILDE  &kp RPAR        &kp RBRC  &kp COLON  &kp RBKT   &trans
&trans  &kp QMARK             &kp MINUS             &kp BSLH            &kp EQUAL              &kp LT                            &trans                       &trans                            &kp GT     &kp PLUS        &kp PIPE  &kp UNDER  &kp SLASH  &trans
&trans  &kp LC(LA(LS(LEFT)))  &kp LC(LA(LS(DOWN)))  &kp LC(LA(LS(UP)))  &kp LC(LA(LS(RIGHT)))              &mo 5         &trans  &trans                       &trans  &trans  &trans                       &kp SCROLLLOCK  &trans    &trans     &trans     &trans
            >;
        };

        layer_Fn {
            bindings = <
&trans  &trans    &trans    &trans  &trans     &trans  &bootloader                                          &kp LC(LA(LS(F6)))  &none  &kp F10  &kp F11  &kp F12  &none  &none
&trans  &trans    &trans    &trans  &trans     &trans  &trans                                               &kp LC(LA(LS(F5)))  &none  &kp F7   &kp F8   &kp F9   &none  &none
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans       &to 2   &trans      &bt BT_CLR  &trans  &kp LC(LA(LS(F4)))  &none  &kp F4   &kp F5   &kp F6   &none  &none
&trans  &trans    &trans    &trans  &trans     &trans                       &none       &none                                   &none  &kp F1   &kp F2   &kp F3   &none  &none
&trans  &trans    &trans    &trans  &trans             &trans       &trans  &none       &none       &none   &none                      &none    &none    &none    &none  &none
            >;
        };
    };
};
